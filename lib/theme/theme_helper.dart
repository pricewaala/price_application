import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.whiteA700,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.primary,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(24.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: appTheme.blueGray40001,
            width: 1.h,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(17.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      checkboxTheme: CheckboxThemeData(
        fillColor: MaterialStateColor.resolveWith((states) {
          if (states.contains(MaterialState.selected)) {
            return colorScheme.primary;
          }
          return colorScheme.onSurface;
        }),
        side: BorderSide(
          width: 1,
        ),
        visualDensity: const VisualDensity(
          vertical: -4,
          horizontal: -4,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: appTheme.gray10002,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 16.fSize,
          fontFamily: 'Mulish',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.black900,
          fontSize: 14.fSize,
          fontFamily: 'Product Sans Medium',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: colorScheme.onPrimaryContainer,
          fontSize: 12.fSize,
          fontFamily: 'Product Sans Medium',
          fontWeight: FontWeight.w400,
        ),
        displayMedium: TextStyle(
          color: colorScheme.errorContainer,
          fontSize: 40.fSize,
          fontFamily: 'Product Sans',
          fontWeight: FontWeight.w700,
        ),
        headlineMedium: TextStyle(
          color: appTheme.black900,
          fontSize: 26.fSize,
          fontFamily: 'Product Sans',
          fontWeight: FontWeight.w700,
        ),
        headlineSmall: TextStyle(
          color: appTheme.black900,
          fontSize: 24.fSize,
          fontFamily: 'Product Sans',
          fontWeight: FontWeight.w700,
        ),
        labelLarge: TextStyle(
          color: colorScheme.onPrimaryContainer,
          fontSize: 12.fSize,
          fontFamily: 'Product Sans Medium',
          fontWeight: FontWeight.w500,
        ),
        labelMedium: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 11.fSize,
          fontFamily: 'Mulish',
          fontWeight: FontWeight.w600,
        ),
        labelSmall: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 9.fSize,
          fontFamily: 'Mulish',
          fontWeight: FontWeight.w800,
        ),
        titleLarge: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 20.fSize,
          fontFamily: 'Mulish',
          fontWeight: FontWeight.w400,
        ),
        titleMedium: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 16.fSize,
          fontFamily: 'Product Sans',
          fontWeight: FontWeight.w700,
        ),
        titleSmall: TextStyle(
          color: appTheme.blueGray40001,
          fontSize: 14.fSize,
          fontFamily: 'Product Sans Medium',
          fontWeight: FontWeight.w500,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF343434),
    primaryContainer: Color(0X26B5B5B5),

    // Error colors
    errorContainer: Color(0XFF231F20),
    onError: Color(0XFF981B1F),
    onErrorContainer: Color(0XFFBEBFC4),

    // On colors(text colors)
    onPrimary: Color(0XFF020202),
    onPrimaryContainer: Color(0XFF1D1F22),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amber300 => Color(0XFFFFD952);
  Color get amber30001 => Color(0XFFFFD953);
  Color get amber30002 => Color(0XFFF2C94C);

  // Black
  Color get black900 => Color(0XFF000000);
  Color get black90033 => Color(0X330E0E0E);

  // Blue
  Color get blue100 => Color(0XFFB4CEFF);
  Color get blue300 => Color(0XFF57ADF4);
  Color get blue700 => Color(0XFF3266CE);
  Color get blue70001 => Color(0XFF1F72CD);

  // BlueGray
  Color get blueGray100 => Color(0XFFCBD2E3);
  Color get blueGray10001 => Color(0XFFCFD1D6);
  Color get blueGray10002 => Color(0XFFD1CACC);
  Color get blueGray10003 => Color(0XFFD5D5D5);
  Color get blueGray10004 => Color(0XFFCCD2E3);
  Color get blueGray10005 => Color(0XFFD7D7D7);
  Color get blueGray10006 => Color(0XFFCBCDD8);
  Color get blueGray200 => Color(0XFFB0B4C3);
  Color get blueGray20001 => Color(0XFFA6AAC3);
  Color get blueGray400 => Color(0XFF8E8E8E);
  Color get blueGray40001 => Color(0XFF777E90);
  Color get blueGray40002 => Color(0XFF858B8F);
  Color get blueGray40003 => Color(0XFF868B90);
  Color get blueGray40004 => Color(0XFF8A8A8F);
  Color get blueGray40099 => Color(0X997A869A);
  Color get blueGray50 => Color(0XFFEFEFF4);
  Color get blueGray500 => Color(0XFF508A7B);
  Color get blueGray50001 => Color(0XFF6D758A);
  Color get blueGray50002 => Color(0XFF50897B);
  Color get blueGray5001 => Color(0XFFEEEFF1);
  Color get blueGray600 => Color(0XFF5A7078);
  Color get blueGray700 => Color(0XFF44565C);
  Color get blueGray70075 => Color(0X75474D5F);
  Color get blueGray900 => Color(0XFF3A2C27);
  Color get blueGray90001 => Color(0XFF172B4D);
  Color get blueGray90002 => Color(0XFF2B2F32);
  Color get blueGray90003 => Color(0XFF2E2E2E);
  Color get blueGray90004 => Color(0XFF33302E);

  // BlueGrayf
  Color get blueGray1007f => Color(0X7FD6CFD2);

  // BlueGrayAb
  Color get blueGray900Ab => Color(0XAB323644);

  // Cyan
  Color get cyan200 => Color(0XFF6DD5ED);
  Color get cyan600 => Color(0XFF09A2C4);

  // DeepOrangec
  Color get deepOrange1006c => Color(0X6CEACAB7);

  // DeepOrange
  Color get deepOrange800 => Color(0XFFCF6112);

  // Gray
  Color get gray100 => Color(0XFFF3F4F4);
  Color get gray10001 => Color(0XFFF4F5F6);
  Color get gray10002 => Color(0XFFF3F3F6);
  Color get gray10003 => Color(0XFFF3F3F3);
  Color get gray10004 => Color(0XFFF1F2F4);
  Color get gray10005 => Color(0XFFF7F7F7);
  Color get gray10006 => Color(0XFFF7F7F8);
  Color get gray10007 => Color(0XFFF1F2F3);
  Color get gray10008 => Color(0XFFF4F4F4);
  Color get gray10009 => Color(0XFFF2F2F2);
  Color get gray200 => Color(0XFFE5E8EB);
  Color get gray20001 => Color(0XFFE7E8E9);
  Color get gray20002 => Color(0XFFEBEBEB);
  Color get gray20003 => Color(0XFFEFEFEF);
  Color get gray20004 => Color(0XFFE8E8E8);
  Color get gray300 => Color(0XFFE2E2E2);
  Color get gray400 => Color(0XFFC3C3C3);
  Color get gray40001 => Color(0XFFC2C6B5);
  Color get gray40002 => Color(0XFFB8B8B8);
  Color get gray40003 => Color(0XFFC8C7CC);
  Color get gray40004 => Color(0XFFB9AEB2);
  Color get gray40005 => Color(0XFFC4C4C4);
  Color get gray50 => Color(0XFFFBFBFB);
  Color get gray500 => Color(0XFFA3A5AD);
  Color get gray50001 => Color(0XFFAAA9A6);
  Color get gray50002 => Color(0XFFA5A7AC);
  Color get gray50003 => Color(0XFFA3A798);
  Color get gray50004 => Color(0XFF9B9B9B);
  Color get gray50005 => Color(0XFF9D9D9D);
  Color get gray50006 => Color(0XFF9C9491);
  Color get gray5001 => Color(0XFFFCFCFC);
  Color get gray5002 => Color(0XFFFFFAF7);
  Color get gray5003 => Color(0XFFF9F9F9);
  Color get gray5004 => Color(0XFFF8F8FA);
  Color get gray5005 => Color(0XFFFFFBF9);
  Color get gray5006 => Color(0XFFFBFCFC);
  Color get gray5007 => Color(0XFFFAFAFA);
  Color get gray600 => Color(0XFF898280);
  Color get gray60001 => Color(0XFF707070);
  Color get gray60002 => Color(0XFF737680);
  Color get gray700 => Color(0XFF5A5A5A);
  Color get gray70001 => Color(0XFF575757);
  Color get gray70002 => Color(0XFF686868);
  Color get gray800 => Color(0XFF43484B);
  Color get gray80001 => Color(0XFF353945);
  Color get gray80002 => Color(0XFF464447);
  Color get gray80003 => Color(0XFF3F3F42);
  Color get gray80004 => Color(0XFF474340);
  Color get gray80005 => Color(0XFF414141);
  Color get gray80006 => Color(0XFF505050);
  Color get gray80007 => Color(0XFF42474A);
  Color get gray80008 => Color(0XFF4E4E4E);
  Color get gray900 => Color(0XFF2D201C);
  Color get gray90001 => Color(0XFF130F26);
  Color get gray90002 => Color(0XFF222222);
  Color get gray90003 => Color(0XFF000839);
  Color get gray90004 => Color(0XFF151515);
  Color get gray90005 => Color(0XFF131416);
  Color get gray90006 => Color(0XFF262626);
  Color get gray90007 => Color(0XFF22262E);
  Color get gray90008 => Color(0XFF332118);
  Color get gray90009 => Color(0XFF121420);
  Color get gray90010 => Color(0XFF22242A);

  // Graya
  Color get gray9001a => Color(0X1A0E132D);

  // Graye
  Color get gray9007e => Color(0X7E16191C);

  // Indigo
  Color get indigo200 => Color(0XFF998FD4);

  // Orange
  Color get orangeA200 => Color(0XFFF2994A);

  // Red
  Color get red200 => Color(0XFFDFA8A9);
  Color get red300 => Color(0XFFFF6E6E);
  Color get red500 => Color(0XFFEA4335);
  Color get redA100 => Color(0XFFF08C7D);
  Color get redA700 => Color(0XFFFF0606);
  Color get redA70001 => Color(0XFFF20000);
  Color get redA70002 => Color(0XFFF70000);
  Color get redA70003 => Color(0XFFED0006);
  Color get redA70004 => Color(0XFFC40000);

  // Teal
  Color get teal400 => Color(0XFF2193B0);
  Color get teal700 => Color(0XFF009154);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
